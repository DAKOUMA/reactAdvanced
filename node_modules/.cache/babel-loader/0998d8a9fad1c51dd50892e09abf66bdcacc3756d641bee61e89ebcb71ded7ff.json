{"ast":null,"code":"var _jsxFileName = \"/home/dakouma/Documents/Coursera/reactAdvanced/src/components/UsestateHook.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GoalForm(props) {\n  _s();\n  const [formData, setFormData] = React.useState({\n    goal: \"\",\n    by: \"\"\n  });\n  function changeHandler(e) {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  }\n  function submitHandler(e) {\n    e.preventDefault();\n    props.onAdd(formData);\n    setFormData({\n      goal: \"\",\n      by: \"\"\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Little Lemon Goals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"goal\",\n        placeholder: \"Goal\",\n        value: formData.goal,\n        onChange: changeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"by\",\n        placeholder: \"By...\",\n        value: formData.by,\n        onChange: changeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(GoalForm, \"JJrxS3gYjLjPk/ZRTXLkAzfy/fo=\");\n_c = GoalForm;\nfunction ListGoal(props) {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: props.allGoals.map(g => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" My goal is to \", g.goal, \", by \", g.by, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)\n    }, g.goal, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_c2 = ListGoal;\nfunction UsestateHook(params) {\n  _s2();\n  const [allGoals, upadateAllGoals] = React.useState([]);\n  function addGoal(goal) {\n    upadateAllGoals([...allGoals, goal]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GoalForm, {\n      onAdd: addGoal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(ListGoal, {\n      allGoals: allGoals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 17\n  }, this);\n}\n_s2(UsestateHook, \"vqyuU0ErHCUExEJuGWujyOFfAcA=\");\n_c3 = UsestateHook;\nexport { UsestateHook };\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"GoalForm\");\n$RefreshReg$(_c2, \"ListGoal\");\n$RefreshReg$(_c3, \"UsestateHook\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","GoalForm","props","_s","formData","setFormData","useState","goal","by","changeHandler","e","target","name","value","submitHandler","preventDefault","onAdd","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","_c","ListGoal","allGoals","map","g","_c2","UsestateHook","params","_s2","upadateAllGoals","addGoal","_c3","$RefreshReg$"],"sources":["/home/dakouma/Documents/Coursera/reactAdvanced/src/components/UsestateHook.js"],"sourcesContent":["import React from \"react\"\n\nfunction GoalForm(props) {\n    const [formData, setFormData] = React.useState({goal: \"\", by: \"\"})\n\n    function changeHandler(e) {\n        setFormData({ ...formData, [e.target.name]: e.target.value});\n    }\n\n    function submitHandler(e) {\n        e.preventDefault();\n        props.onAdd(formData);\n        setFormData({goal: \"\", by: \"\"});\n    }\n\n    return (\n        <>\n            <h1>My Little Lemon Goals</h1>\n            <form onSubmit={submitHandler}>\n                <input\n                    type=\"text\"\n                    name=\"goal\"\n                    placeholder=\"Goal\"\n                    value={formData.goal}\n                    onChange={changeHandler}/>\n                <input\n                    type=\"text\"\n                    name=\"by\"\n                    placeholder=\"By...\"\n                    value={formData.by}\n                    onChange={changeHandler}/>\n            </form>\n        </>\n    )\n}\n\nfunction ListGoal(props) {\n    return(\n        <ul>\n            {props.allGoals.map((g) => (\n                <li key={g.goal}>\n                    <span> My goal is to {g.goal}, by {g.by} </span>\n                </li>\n            ) )}\n        </ul>\n    )\n}\n\n\nfunction UsestateHook(params) {\n    const [allGoals, upadateAllGoals] = React.useState([]);\n\n    function addGoal(goal) {\n        upadateAllGoals([...allGoals, goal])\n    }\n\n    return (    <div>\n                    <GoalForm onAdd={addGoal}/>\n                    <ListGoal allGoals={allGoals}/>\n                </div>\n    )\n}\n\nexport {UsestateHook}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}